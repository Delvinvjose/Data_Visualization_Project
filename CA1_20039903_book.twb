<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <ParameterDefaultValues />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Sort by' datatype='string' name='[Code Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Renewable&quot;'>
        <calculation class='tableau' formula='&quot;Total Renewable&quot;' />
        <members>
          <member value='&quot;Hydro&quot;' />
          <member value='&quot;Wind&quot;' />
          <member value='&quot;Solar&quot;' />
          <member value='&quot;Total Renewable&quot;' />
        </members>
      </column>
      <column caption='Select Year' datatype='integer' name='[Country Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1978'>
        <calculation class='tableau' formula='1978' />
        <members>
          <member value='1965' />
          <member value='1966' />
          <member value='1967' />
          <member value='1968' />
          <member value='1969' />
          <member value='1970' />
          <member value='1971' />
          <member value='1972' />
          <member value='1973' />
          <member value='1974' />
          <member value='1975' />
          <member value='1976' />
          <member value='1977' />
          <member value='1978' />
          <member value='1979' />
          <member value='1980' />
          <member value='1981' />
          <member value='1982' />
          <member value='1983' />
          <member value='1984' />
          <member value='1985' />
          <member value='1986' />
          <member value='1987' />
          <member value='1988' />
          <member value='1989' />
          <member value='1990' />
          <member value='1991' />
          <member value='1992' />
          <member value='1993' />
          <member value='1994' />
          <member value='1995' />
          <member value='1996' />
          <member value='1997' />
          <member value='1998' />
          <member value='1999' />
          <member value='2000' />
          <member value='2001' />
          <member value='2002' />
          <member value='2003' />
          <member value='2004' />
          <member value='2005' />
          <member value='2006' />
          <member value='2007' />
          <member value='2008' />
          <member value='2009' />
          <member value='2010' />
          <member value='2011' />
          <member value='2012' />
          <member value='2013' />
          <member value='2014' />
          <member value='2015' />
          <member value='2016' />
          <member value='2017' />
          <member value='2018' />
          <member value='2019' />
          <member value='2020' />
          <member value='2021' />
        </members>
      </column>
      <column caption='Top N' datatype='integer' default-value-field='[federated.04da95n1lco7b610s88ma1ozklyx].[Calculation_2034219710840311812]' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='184'>
        <calculation class='tableau' formula='184' />
      </column>
    </datasource>
    <datasource caption='energy_dataset_' inline='true' name='federated.04da95n1lco7b610s88ma1ozklyx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='energy_dataset_' name='textscan.1lvzet81h87esf1gib6ee0bh00zs'>
            <connection class='textscan' directory='D:/data vis. ca1/archive (4)' filename='energy_dataset_.csv' password='' server='' />
          </named-connection>
          <named-connection caption='02 modern-renewable-energy-consumption' name='textscan.04is80h09mt1zi10iy3wg0u8zpum'>
            <connection class='textscan' directory='D:/data vis. ca1' filename='02 modern-renewable-energy-consumption.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.04is80h09mt1zi10iy3wg0u8zpum' name='02 modern-renewable-energy-consumption.csv' table='[02 modern-renewable-energy-consumption#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Entity' ordinal='0' />
            <column datatype='string' name='Code' ordinal='1' />
            <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
            <column datatype='real' name='Geo Biomass Other - TWh' ordinal='3' />
            <column datatype='real' name='Solar Generation - TWh' ordinal='4' />
            <column datatype='real' name='Wind Generation - TWh' ordinal='5' />
            <column datatype='real' name='Hydro Generation - TWh' ordinal='6' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Entity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Entity]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Entity</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Code]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geo Biomass Other - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Geo Biomass Other - TWh]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Geo Biomass Other - TWh</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar Generation - TWh]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Solar Generation - TWh</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind Generation - TWh]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Wind Generation - TWh</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hydro Generation - TWh</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Hydro Generation - TWh]</local-name>
            <parent-name>[02 modern-renewable-energy-consumption.csv]</parent-name>
            <remote-alias>Hydro Generation - TWh</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Year Filter' datatype='real' name='[Calculation_1292814622610022402]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Country Parameter] = 0 THEN [Hydro Generation - TWh]  &#13;&#10;ELSEIF [Calculation_2034219711260499989] = [Parameters].[Country Parameter] THEN [Hydro Generation - TWh]  &#13;&#10;ELSE NULL &#13;&#10;END' />
      </column>
      <column caption='Sort Order' datatype='real' name='[Calculation_1292814622628691973]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Code Parameter]  &#13;&#10;  WHEN &quot;Hydro&quot; THEN [Hydro Generation - TWh]  &#13;&#10;  WHEN &quot;Wind&quot; THEN [Wind Generation - TWh]  &#13;&#10;  WHEN &quot;Solar&quot; THEN [Solar Generation - TWh]  &#13;&#10;  WHEN &quot;Total Renewable&quot; THEN  &#13;&#10;    [Hydro Generation - TWh] + [Wind Generation - TWh] + [Solar Generation - TWh]  &#13;&#10;END' />
      </column>
      <column caption='Total Generation' datatype='real' name='[Calculation_2034219710795681793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Geo Biomass Other - TWh] + [Hydro Generation - TWh] + [Solar Generation - TWh] + [Wind Generation - TWh]' />
      </column>
      <column caption='Avg Consumption by Country' datatype='real' name='[Calculation_2034219710797938690]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Entity] : AVG([Calculation_2034219710795681793]) }' />
      </column>
      <column caption='Median Total Consumption by Country' datatype='real' name='[Calculation_2034219710800818179]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED[Entity]:MEDIAN([Calculation_2034219710795681793]) }' />
      </column>
      <column caption='Overall Avg Consumption' datatype='real' name='[Calculation_2034219710840311812]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : AVG([Calculation_2034219710795681793]) }' />
      </column>
      <column caption='Avg Total Consumption by Country' datatype='real' name='[Calculation_2034219710841831430]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Entity] : AVG([Calculation_2034219710795681793]) }' />
      </column>
      <column caption='Consumption Status' datatype='string' name='[Calculation_2034219710842773511]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_2034219710841831430] &gt;= [Calculation_2034219710840311812] &#13;&#10;THEN &quot;Above Average&quot; &#13;&#10;ELSE &quot;Below Average&quot; &#13;&#10;END' />
      </column>
      <column caption='Rank by Avg Consumption' datatype='integer' name='[Calculation_2034219710858469384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(AVG([Calculation_2034219710795681793]), &apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Dynamic Max Consumption' datatype='real' name='[Calculation_2034219710866538505]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED : MAX([Calculation_2034219710841831430]) }' />
      </column>
      <column caption='Top N Filter' datatype='string' name='[Calculation_2034219710913757196]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF INDEX() &lt;= [Parameters].[Parameter 1] THEN &quot;Show&quot; &#13;&#10;ELSE &quot;Hide&quot; &#13;&#10;END'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Energy Type' datatype='string' name='[Calculation_2034219710959312914]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Hydro Generation - TWh] &gt; 0 THEN &quot;Hydro&quot;&#13;&#10;ELSEIF [Solar Generation - TWh] &gt; 0 THEN &quot;Solar&quot;&#13;&#10;ELSEIF [Wind Generation - TWh] &gt; 0 THEN &quot;Wind&quot;&#13;&#10;ELSE &quot;Biomass&quot;&#13;&#10;END' />
      </column>
      <column caption='Percentage of Total Hydro' datatype='real' name='[Calculation_2034219710965682195]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Hydro Generation - TWh]) / TOTAL(SUM([Hydro Generation - TWh]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Year (Integer)' datatype='integer' name='[Calculation_2034219711260499989]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INT(YEAR([Year]))' />
      </column>
      <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
      <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
      <column caption='02 modern-renewable-energy-consumption.csv' datatype='table' name='[__tableau_internal_object_id__].[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_2034219710842773511]' derivation='None' name='[none:Calculation_2034219710842773511:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2034219710959312914]' derivation='None' name='[none:Calculation_2034219710959312914:nk]' pivot='key' type='nominal' />
      <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_2034219710795681793]' derivation='Sum' name='[sum:Calculation_2034219710795681793:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
      <group caption='Country Set 2' name='[Country Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='11' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Hydro Generation - TWh])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Entity]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Country Set' name='[Country Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Calculation_2034219710795681793])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Entity]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Consumption Status,Country)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Calculation_2034219710842773511:nk]' />
          <groupfilter function='level-members' level='[none:Entity:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/DELVIN~1/AppData/Local/Temp/TableauTemp/#TableauTemp_0lzd4wy1xiqddn176hy3u0rx2tkk.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='03/07/2025 10:59:14 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Entity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Entity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Entity</remote-alias>
              <ordinal>0</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>104</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Code</remote-alias>
              <ordinal>1</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>82</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Year</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Year</remote-alias>
              <ordinal>2</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>57</approx-count>
              <contains-null>true</contains-null>
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Geo Biomass Other - TWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Geo Biomass Other - TWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Geo Biomass Other - TWh</remote-alias>
              <ordinal>3</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1832</approx-count>
              <contains-null>true</contains-null>
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Solar Generation - TWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Solar Generation - TWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Solar Generation - TWh</remote-alias>
              <ordinal>4</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1058</approx-count>
              <contains-null>true</contains-null>
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Wind Generation - TWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Wind Generation - TWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Wind Generation - TWh</remote-alias>
              <ordinal>5</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1177</approx-count>
              <contains-null>true</contains-null>
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Hydro Generation - TWh</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Hydro Generation - TWh]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Hydro Generation - TWh</remote-alias>
              <ordinal>6</ordinal>
              <family>02 modern-renewable-energy-consumption.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3304</approx-count>
              <contains-null>true</contains-null>
              <object-id>[02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='100' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_2034219710842773511:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;Above Average&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Below Average&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2034219710842773511:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Above Average&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Below Average&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Calculation_2034219710959312914:nk]' type='palette'>
            <map to='#0055ff'>
              <bucket>&quot;Hydro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Biomass&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Wind&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solar&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Wind Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[:Measure Names]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_2034219711260905494:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_2034219710795681793:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Entity:nk]&#10;[none:Forecast Indicator:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Non-OECD (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Europe (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;World&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Middle East (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;OECD (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;United States&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;North America (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;South and Central America (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Western Africa (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Africa (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Finland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;North America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Poland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;South America&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Oman&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;CIS (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Europe&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;USSR&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Asia Pacific (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Central America (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Middle Africa (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Asia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Eastern Africa (BP)&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Greece&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Israel&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Romania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
          </encoding>
          <encoding attr='color' field='[none:Entity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eastern Africa (BP)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Non-OECD (BP)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe (BP)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CIS (BP)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;USSR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa (BP)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East (BP)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America (BP)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia Pacific (BP)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South and Central America (BP)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Africa (BP)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central America (BP)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Middle Africa (BP)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;OECD (BP)&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Ireland&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Entity' />
        <field-sort-custom-order field='Calculation_1292814622625898499' />
        <field-sort-custom-order field='Calculation_1292814622610022402' />
        <field-sort-custom-order field='Calculation_2034219711260905494' />
        <field-sort-custom-order field='Calculation_2034219711260499989' />
        <field-sort-custom-order field='Calculation_2034219710965682195' />
        <field-sort-custom-order field='Code' />
        <field-sort-custom-order field='Calculation_1292814622628691973' />
        <field-sort-custom-order field='Calculation_1292814622607470592' />
        <field-sort-custom-order field='Calculation_2034219710957293585' />
        <field-sort-custom-order field='Calculation_2034219710956425232' />
        <field-sort-custom-order field='Calculation_2034219710955888655' />
        <field-sort-custom-order field='Calculation_2034219710917787661' />
        <field-sort-custom-order field='Calculation_2034219710913757196' />
        <field-sort-custom-order field='Year' />
        <field-sort-custom-order field='Geo Biomass Other - TWh' />
        <field-sort-custom-order field='Solar Generation - TWh' />
        <field-sort-custom-order field='Wind Generation - TWh' />
        <field-sort-custom-order field='Hydro Generation - TWh' />
        <field-sort-custom-order field='Calculation_2034219710795681793' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field='Total Consumption (bin)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Sort by' datatype='string' name='[Code Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Renewable&quot;'>
          <calculation class='tableau' formula='&quot;Total Renewable&quot;' />
        </column>
        <column caption='Select Year' datatype='integer' name='[Country Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1978'>
          <calculation class='tableau' formula='1978' />
        </column>
        <column caption='Top N' datatype='integer' default-value-field='[federated.04da95n1lco7b610s88ma1ozklyx].[Calculation_2034219710840311812]' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='184'>
          <calculation class='tableau' formula='184' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='02 modern-renewable-energy-consumption.csv' id='02 modern-renewable-energy-consumption.csv_C97C4ADC1A3F4E2C9015D8EFF91323E2'>
            <properties context=''>
              <relation connection='textscan.04is80h09mt1zi10iy3wg0u8zpum' name='02 modern-renewable-energy-consumption.csv' table='[02 modern-renewable-energy-consumption#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Entity' ordinal='0' />
                  <column datatype='string' name='Code' ordinal='1' />
                  <column datatype='date' date-parse-format='yyyy' name='Year' ordinal='2' />
                  <column datatype='real' name='Geo Biomass Other - TWh' ordinal='3' />
                  <column datatype='real' name='Solar Generation - TWh' ordinal='4' />
                  <column datatype='real' name='Wind Generation - TWh' ordinal='5' />
                  <column datatype='real' name='Hydro Generation - TWh' ordinal='6' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 10'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Top 10 Region - Hydropower Generation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='energy_dataset_' name='federated.04da95n1lco7b610s88ma1ozklyx' />
          </datasources>
          <datasource-dependencies datasource='federated.04da95n1lco7b610s88ma1ozklyx'>
            <column caption='Percentage of Total Hydro' datatype='real' name='[Calculation_2034219710965682195]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Hydro Generation - TWh]) / TOTAL(SUM([Hydro Generation - TWh]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2034219710965682195]' derivation='User' name='[usr:Calculation_2034219710965682195:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[Country Set 2]' />
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Entity:nk]' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;World&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[Country Set 2]</column>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
              <wedge-size column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]' />
              <text column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
              <text column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]' />
              <text column='[federated.04da95n1lco7b610s88ma1ozklyx].[usr:Calculation_2034219710965682195:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A5C5934A-5E5F-43C4-A657-E42EABA2974F}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Renewable Energy Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='energy_dataset_' name='federated.04da95n1lco7b610s88ma1ozklyx' />
          </datasources>
          <datasource-dependencies datasource='federated.04da95n1lco7b610s88ma1ozklyx'>
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Geo Biomass Other - TWh]' derivation='Sum' name='[sum:Geo Biomass Other - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Solar Generation - TWh]' derivation='Sum' name='[sum:Solar Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]'>
            <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Asia&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</column>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e2e5e6</color>
                <color>#d4dadb</color>
                <color>#c7cfd0</color>
                <color>#bac4c5</color>
                <color>#adb9ba</color>
                <color>#a0aeaf</color>
                <color>#94a3a4</color>
                <color>#889899</color>
                <color>#7c8d8e</color>
                <color>#718283</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Geo Biomass Other - TWh:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Wind Generation - TWh:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-color' value='#999999' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Geo Biomass Other - TWh:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
        </panes>
        <rows>([federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk] + ([federated.04da95n1lco7b610s88ma1ozklyx].[sum:Wind Generation - TWh:qk] + ([federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk] + [federated.04da95n1lco7b610s88ma1ozklyx].[sum:Geo Biomass Other - TWh:qk])))</rows>
        <cols>[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{2FD1A8C7-A86B-47F0-B553-65BC43470D4D}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Production Trend Over Time and 10 year Future Prediction</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='energy_dataset_' name='federated.04da95n1lco7b610s88ma1ozklyx' />
          </datasources>
          <datasource-dependencies datasource='federated.04da95n1lco7b610s88ma1ozklyx'>
            <column caption='Total Generation' datatype='real' name='[Calculation_2034219710795681793]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Geo Biomass Other - TWh] + [Hydro Generation - TWh] + [Solar Generation - TWh] + [Wind Generation - TWh]' />
            </column>
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_2034219710795681793]' derivation='Sum' forecast-column-base='[sum:Calculation_2034219710795681793:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_2034219710795681793:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2034219710795681793]' derivation='Sum' name='[sum:Calculation_2034219710795681793:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year-Trunc' name='[tyr:Year:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Africa&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Asia Pacific (BP)&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Entity:nk]' member='&quot;Bangladesh&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.04da95n1lco7b610s88ma1ozklyx].[fVal:sum:Calculation_2034219710795681793:qk]</rows>
        <cols>[federated.04da95n1lco7b610s88ma1ozklyx].[tyr:Year:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{85B54368-D4D5-41F0-A183-F1CD7D0F3657}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000' fontname='Benton Sans Book'>Wind and Hydro Generation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='energy_dataset_' name='federated.04da95n1lco7b610s88ma1ozklyx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Select Year' datatype='integer' name='[Country Parameter]' param-domain-type='list' role='measure' type='quantitative' value='1978'>
              <calculation class='tableau' formula='1978' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04da95n1lco7b610s88ma1ozklyx'>
            <column caption='Year Filter' datatype='real' name='[Calculation_1292814622610022402]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Country Parameter] = 0 THEN [Hydro Generation - TWh]  &#13;&#10;ELSEIF [Calculation_2034219711260499989] = [Parameters].[Country Parameter] THEN [Hydro Generation - TWh]  &#13;&#10;ELSE NULL &#13;&#10;END' />
            </column>
            <column caption='Total Generation' datatype='real' name='[Calculation_2034219710795681793]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Geo Biomass Other - TWh] + [Hydro Generation - TWh] + [Solar Generation - TWh] + [Wind Generation - TWh]' />
            </column>
            <column caption='Year (Integer)' datatype='integer' name='[Calculation_2034219711260499989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INT(YEAR([Year]))' />
            </column>
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Geo Biomass Other - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1292814622610022402]' derivation='Attribute' name='[attr:Calculation_1292814622610022402:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2034219710795681793]' derivation='Sum' name='[sum:Calculation_2034219710795681793:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Hydro Generation - TWh]' derivation='Sum' name='[sum:Hydro Generation - TWh:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Generation - TWh]' derivation='Sum' name='[sum:Wind Generation - TWh:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.04da95n1lco7b610s88ma1ozklyx].[attr:Calculation_1292814622610022402:qk]' included-values='in-range'>
            <min>0.0</min>
            <max>923.19806000000005</max>
          </filter>
          <slices>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[attr:Calculation_1292814622610022402:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_2034219710795681793:qk]' />
              <lod column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.1534254550933838' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Wind Generation - TWh:qk]</rows>
        <cols>[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Hydro Generation - TWh:qk]</cols>
      </table>
      <simple-id uuid='{6DD3E3AD-5980-433B-AC97-9CFCCEDABEB9}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Geo Biomass Other,Hydro Generation,Solar and Wind Generation Overtime</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='energy_dataset_' name='federated.04da95n1lco7b610s88ma1ozklyx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Sort by' datatype='string' name='[Code Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;Total Renewable&quot;'>
              <calculation class='tableau' formula='&quot;Total Renewable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.04da95n1lco7b610s88ma1ozklyx'>
            <column caption='Sort Order' datatype='real' name='[Calculation_1292814622628691973]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Code Parameter]  &#13;&#10;  WHEN &quot;Hydro&quot; THEN [Hydro Generation - TWh]  &#13;&#10;  WHEN &quot;Wind&quot; THEN [Wind Generation - TWh]  &#13;&#10;  WHEN &quot;Solar&quot; THEN [Solar Generation - TWh]  &#13;&#10;  WHEN &quot;Total Renewable&quot; THEN  &#13;&#10;    [Hydro Generation - TWh] + [Wind Generation - TWh] + [Solar Generation - TWh]  &#13;&#10;END' />
            </column>
            <column caption='Country' datatype='string' name='[Entity]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column datatype='real' name='[Hydro Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Solar Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='real' name='[Wind Generation - TWh]' role='measure' type='quantitative' />
            <column datatype='date' name='[Year]' role='dimension' type='quantitative' />
            <column-instance column='[Entity]' derivation='None' name='[none:Entity:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1292814622628691973]' derivation='Sum' name='[sum:Calculation_1292814622628691973:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <alphabetic-sort column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' direction='ASC' />
          <filter class='categorical' column='[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]'>
            <groupfilter function='level-members' level='[yr:Year:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' />
            </encodings>
            <reference-line axis-column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_1292814622628691973:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_1292814622628691973:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</rows>
        <cols>[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_1292814622628691973:qk]</cols>
      </table>
      <simple-id uuid='{CBEB9998-B400-4556-860D-6875F87ED2A7}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]&#10;[federated.04da95n1lco7b610s88ma1ozklyx].[none:Forecast Indicator:nk]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[Country Set]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Forecast Indicator:nk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[tyr:Year:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[usr:Calculation_2034219710913757196:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14E92478-55B5-404F-B1CC-5AD563A5A775}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Calculation_2034219710795681793:qk]' type='size' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[:Measure Names]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_1292814622607470592:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_2034219711260905494:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEC6B7B7-C76E-411E-9011-552C8F45E367}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]' type='filter' />
            <card mode='compact' param='[Parameters].[Code Parameter]' type='parameter' />
            <card pane-specification-id='5' param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E658419A-CD20-48C5-9F17-C73378C24551}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' type='color' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[Country Set 2]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_1292814622610022402:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{29D2FABE-5044-4584-80F2-91CC27EB2043}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]' type='filter' />
            <card param='[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Geo Biomass Other - TWh:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_2034219710955888655:nk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Calculation_2034219710957293585:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[none:Entity:nk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Geo Biomass Other - TWh:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[sum:Solar Generation - TWh:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[tyr:Year:qk]</field>
            <field>[federated.04da95n1lco7b610s88ma1ozklyx].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CE405F45-6005-485D-A5BE-E4FAE8827966}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 10' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      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
      meb/Az4HA6TyptEVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2dZ2xkWXaYv/cqslhVDMVUzM3cYTr3TIeZndDds7sjaVertIYErCw56I8t
      2bIhG4YFyDYcYMCGdyEb+qExLBmGF17Au1oFS7M7PanjdGInspkzi2QVySJZ+YXrH2yyE9ks
      FqtYge8DCHTXI8879d4775577jn3SEIIgYHBHkXOtgIGBtkk4wag6zqvGmQURUFRlLSfVwiB
      pmlplwsYcrcpVwjBwMAAk5OTaZe9XV6Ua87IWZ6g6zqapiHLm9vZmkKv+p1UEEKg63paZa6R
      7Qcq3+QGAgEGBga4cOFC0n+TswYwMz7AZCBMXWMzi1NDhBOC9tYm+gbHsTvdlFlVAsEQ1c1d
      1HqcSJK0/rMRaw9+JgwgE3Jh1bANucnJTSQSfPnll7z99ttYLJa0yk6FF+Vu2wDMZitmOUw0
      uoRs9bC/3sbjvjG6Th7DPzhASJE5fuI1+vpmkCpcWxrAGlsdT5VMyE3m+xhyV19CV69e5ejR
      o7jd7rTKTpUX5W7bxCx2J52dbSzNLxOPrxAMLuHxuPDPLRJJqKDGCC4sgK0orYob5BdCCHp7
      e3E6nTQ0NGRbnU3Z9ghQXFzE8Ngk+w8eRI8GCYRU9tVWMT0+QlV7O8VmndGpOdqavZnQ1yBP
      8Pv9jI+Pc/HixWyr8kqkTK8DrE2CNxvOEokEAFarNa3nXYsCmc3pn+erqmrIfYXceDzORx99
      xDvvvIPL5Uqr7J3yotyMRoGSIVO+f74ghCCiJIgpCsVmCyaTKa+via7rXL16lSNHjqT88O8m
      WTeAvYwQgsdzM3w88JiYquB1lfDNQ0dx2mzZVi1l8sHvf5acWAneq9kYCU3jk8E+VuIxFE1j
      PLjAncmxbKuVMnNzc0xMTHDs2LGcGcWEEKi6iqIpGz5nWR8B9urDD6BoGnFVfe6zUCKeJW12
      RiwW48svv+S9997LiO+eCgk1wV88+iHXRr9A0RQOeg/zrUPfpsJVsf47uaHpHsVhtdJaUcmj
      mWkAzLJMV1X+Rc+EEFy/fp0jR47gcDiyrQ6wqtP/vPUhH/f/zfpncwM/YXRhmD/42n/AYlpd
      lDMMIIvIksRXOw9SX1JKMBqluaycfeWebKu1bXp6enLO75+PBPhs8OOXPh+ZH6J76janGk8D
      hgFkHZvZzPH6JmA1RLdd31kIQfjSJ4Q+/Qy5qAj3L3wLe1dnJlTdkLm5OSYnJ3Mu3h+MLKLq
      6obH/KG59X9n3QByZbKUr0QuX2Hhjz+EJ3Op+MAANf/+32Kpqcn4uePxODdv3uTtt9/OSN7O
      Tqh0VWM3FxFToy8dayxrXv93bmltsG2it2+vP/wAIhol/uhRxs/7rN/vdDozfr7t4ra5+blD
      3wKef8Eerz/FgeqD6/9PaQRY9E9DkYfowhTzK3Ha29vxjQ3hqqzDZdEZnpilta0Vqzk5+9rL
      kaCdYiovf/mzsrKMnlMIQU9PD263m7q6uoyeK1UkSeKbr/0SXncdV0Y+I6EmOFJ3nHdaLiDL
      pvXf27YBaIkIY2MjFFXYWPJN0dBygJh/HLnMy8zEKLMI9jXXMDw2S1fr1hEN4+HfGa4Pvk7s
      /n2UySkAHGdOY3/ttYye0+/34/P5eOutt3LahZUlmdPN5zjdfG79M/WFsPO2DaDnfjexhMLi
      7Cxnjp5gZnwY35JKy9EmEn4zClBU7ARlDk3TtqwIWytQeFGxnbJnCmJKS6n4gz9AGR5Cstsx
      NzWhSRI8cz3TqW8sFuP69eu8/fbbQPrv2xq7dY1TSoZTIgGmgjJK0MdSJEZbazMDQ6MUuz2U
      2VR8gSD1rQeoKnUYyXAFJFfXdT777DM6Ojqoq6vLmL6we9fCyAZNgVx/UDMl9+HDhyQSifVU
      h0IwgKxHgTJV+WOQXubm5pienubIkSMFdb+ybgAGuU8sFuPGjRu8+eabmEymrf8gj8j6QpgR
      Bcpt1vL7T5w4QVFR4ZW5Zt0ADHKbnp4eysrKqK2tzbYqGcEwgDxGCB1t9Arq6BfI7losh34B
      rC40VUVVFaxWG9IOUhRmZ2fx+XxcuHAhjVrnFoYB5DFq758T++j3QayudyhDnxA6928YfNxL
      Ih7H5S5h/5Hj2FJwXaLRKLdu3eLdd98tqEnvi2R9ElzIFzfTqBM31x9+gNhMH713bhAJhVAV
      hcX5AH0P7217nqXrOtevX+fYsWM5k9+fKbJuAGAYQbqIWTwoLyyghpaX0LTkV2uFEDx8+LCg
      /f5nyQkDMEgN876vgPT0FjoqmzFbnl9QLCp2YjIl7+nOzc0xOzvLa0nmEy3OTnH7ox9y56Mf
      EfT7kj5PrmCsBKdArqzYCiHQZx48mQTXYe78OtNTPoYeP0JRFBzFTg4eO4HD6UpKbjQa5ac/
      /Snnz59PyvWZ6HvAx3/yPTR1dXdvk8XK1/7uP6VmX0fS32Ez9sy+QAapI0kSJu9hTN7D65/V
      NjZRUV1DIhGnqMiByWxOKrHs2Xh/sn7/vY9/vP7wA2hKgrs/+RFf//u/t/0vkyVSMgBViSNk
      C5KuklB1HEV2opEwZqsdswzhaIxih8Pw7bOAJEnY7HZsdnvSfyOE4MGDB5SXl+P1Jl+UH1qc
      f/mz4ELSf58LbN8AhMaD25cpqjlCYnEMSZKorKxgeiGMJMBlUdEAa0k9+2ozW5iRSUQigR6L
      IbtcBW/IMzMzzM7OcuHChW1915qWTobuXnvuM2/L7tUjp4NtG8DUyCDlNfWsqGGsdg/1VXZ6
      +ybpPHWMucEB4lg52NVEX98MWrV7y3qAteO5VA+gTE2z+F++i7a4SPHFC7i//SvPHc+peoAd
      yo1EIty4cYPz58+j6/q2rtnR97/FyoIf//gwSFDV1MbRiz+flnuZs/UAgdkp/LOTzCuluOUw
      sizh8ZQzsxRD0jSKLRrIMmaXl3215VtOgtfaI22neUIy7GQSvPDHHxL66ZMtNSSJuv/2h8+V
      GebKJHincnVd59KlSxw4cCClkKeqqsiyRHDWhyRJlFR501Ycn7OT4IrqOjyVNai6hKQniCkC
      Z3ER7tIVLHYHZkkQCkdxuXKvUDpZnq2zlYsdSPbCSwJb8/s9Hs+2/P4XkWUT5d76NGq2u6Rk
      YpJswiID2HE+iV4WO5/uBOx2J78rcC5mg7p+5gOEoqBM+3B/8DXkouQnlPmCz+djbm6O8+fP
      F/wc51UYYdANkG02Sl/w+wuJSCTC3bt3effdd3NuP5/dZm9/+z2IpmlcvXqV48ePF3yeTzIY
      BrCHWMvzqays3JHfX0hk3QD2sv+520xNTREIBJLO89kLZN0AwDCC3WDN7z9z5sye9/ufxbgS
      ewBN07h8+TKnTp0y/P4XyHoUKBfDoIXEWry/urqa6urqbKuTcxgjQIEzMzNDIBDg0KFDhqu5
      AYYBFDDhcJibN28W5H4+6cIwgAJF0zSuXbvGqVOnsG8jNXqvsW0D0DWVleUVVE0nHo2wvLyC
      pguikTCKqiF0jVA4nLRvb2yNmH6EENy/f5+qqipqdqFTTD6z7UlweDlIILjE8riGSCxRVuFF
      Sqww4FsqqHqAfGZ6epqFhYWC39IkHWzbAIqdToaGBrF7GrFZVeZ8U4RsTtoOdqVUD6BpGkKI
      tN+oQuwPIPQYurKMbClBkjfuJh8Oh7l169Zz+f35Vr+QSdkvyt22ASwvLVFe5WU+OI/D5cRh
      j+Fy2xnqH0TSdIotGgP9Q1jd3vWJ16vqAdYe0nTnfmeyKB7Sr+9WcpXQIOGh/4yW8GGyN+Js
      +V3MxU3P/Y6u69y8eZMzZ8681Lcr365DJmXvqB7AWVIG5gje2gZ0JUZZZTVOpwNPqHDqAXIN
      oauEhj9Ej40gSaBF+gmN/gklB/4l0pNtUdb8/pqaGqqqqrKscf6wbQMwW6yUlj4pAjA7WBuI
      U60HMNgaXU2gRGZZ6zkoSZAIzSA0Fcm8ei+mp6dZXFzknXfeyZ6ieYgRBs0DZLMdTT683g1V
      CNDNR5FMq2Wk0WiU7u5uTp8+bUx6t0nWUyGMG7Y1kixT1vWbzN4rRsSHkIv2U33wF5Ek6bk8
      n0Lcvz/TZN0ADJLD7nbTeO7voCkaJosZSZYQQnDv3j3D798BOeEC5UtCnBACoSvP7ci8m0iy
      jNlmQZJXR83p6WmWlpY4ePDgFn9psBlZHwHy5eEHiPv/hpjvB0jWKpytv4vJWpk1XXRdZ2ho
      yMjv3yHGlUsSXV0mMv5H6PFptJVuYtM/yJouaynOdXV1Rp7PDjEMIGlknr1ckpzejby2w8zM
      DH6/n+bm5qzpUCgYBpAkstlJccs/xuRowVx6Drv3l7OiRzQa5c6dO5w7d85IcU4Dm84BhBCs
      LC+hC3C6SzDLmQlX5lMY1Fb+Frbyt1a3BMxgCsBmrG1pUqgtS7PBpiNAaOoBf/aTK1y/fp1w
      In8mqoXMo0ePqKioMEob08iGBpAIL/LRF7dYCcwSDAbRMhz1y6dIULaYnp7G7/fz2muv5dWo
      metsOI5LkozLU8+BE6207GvGZnlqJ0uBGcamZ7G7PEjRBZZjOl0d++h9PEhxiYdSm4bPH6Sh
      7QCVJVsP0znz8K+EYGgU3G5oroccCi2Gw2Hu3LnD+fPnjZBnmtnQAMx2JyeOvsadG5f5/p/+
      d/7e7/1r6t2rEy5XSSnS1DSyrKJKLjoabfQ9HKTt+BH8Q4MsqnDs2AH6+ucod9YnVQ8AZLc/
      gKZj+vQakn8eZAldfwO9efMdj3czv17XdS5fvsyRI0ewWCwpXSejHmBzuRsagBJe4Pvf/z41
      +/bzt3/rH+B1PX3rKBp0dnVy/1E/NrONSFSj2GljeSVKXFWRJEEsEgaLJX/qAbQEhMJPFBLI
      ofCWk9zdyq/v7u7G6/XS0NCQVrnpIt/rATYcTy2OMi6efxdtZY4/+8H/Zi709A2eiK7QPzDC
      vtYO6r2lLCtW2g8cQJ2forq+idbmRkYmF2hpyqNaVKsFXtsPRXaoqoDW5mxrhBCCqakp5ufn
      OXToULbVKVg27BATmR/nWs8MZ984TpF1Z1aYNx1ihICEAmYTbBFf343uJeFwmEuXLiXdsjRZ
      uekkU3IzKTupDjG6EmNkuJ/w4gwAX7n4s5QWFfjkS5LAlt5examy5vefPHnS2Moww2xoACaL
      nXcufkBLTSmQ2cWqnIkC5QhCCO7evYvX6zW2MN8FNnytF3kaaastR2I1JGrEnXePqakpgsGg
      4ffvEq/0a0Z6bxGM75YqBuFwmO7ubs6ePWvE+3eJV84ymjqPIRn5VruCqqpcv37dKG3cZTY1
      ACU8zw///CfowPvf+BXKHZl5I0mStOfnAWv5/VVVVUZp4y6zqQHElnw0HDxDW40Dly2zc4C9
      PsdY28rwrbfe2vPXYrfZ9LVuKa5ixdfHvXv3iCp7+w2dSUKh0Hp+v+H37z6bzwH0OHOBRSRN
      Rc/gS2kvuz+apnHlyhVef/117HZ72vOhDLZm01eOrsSwOkoptsoomct52tN0d3dTW1tr5Pdn
      kQ0NQI2uMOxbxipCCFsxVmNkTjsTExNGvD8H2NAFkq12aqqrcHpqMSmR58ohI8sLDI9N4fE2
      kgjOsBzXaW9vYaS/D3dlPSVWlaFJP+2dnTh2mEdUqIRCIe7du8f58+eNSW+W2dgATBZ6rv81
      4zRjD01z9uebKbauLgiY7cV0tLfQNzRFaHGayro2Qr5xSps6CI4PE0RwsKOOgbEZutrq1n38
      rXz9dM8Fkj1vqrJTlavrOleuXOHkyZPY7fbn5OxE7qvIN7mZlP2i3E1f0QdPfoXQw3FsJc24
      n/GBtHiYgdEZug50YZHbmRsfYHw2TFO1GZMsoyMwmS1ITwph1rIyN2OtHiATBRCZapCx1Xd6
      FXfu3KG2tpaKioqXZOxE7qvIN7mZlP2i3E0NQFZW8AeXqC1zE1IETuvqUD3n86HrOrNzAeJB
      P8sxlc6DbQz03MdZXk21VeXuvX72dR5AlmWEEK9Mh16zxkwUxGRCLqSeqjs5OUk4HObkyZMb
      hjzzLW25YNOhAVxVzbx+1MmjR49xPpOq39RxkPW+JN6nq5ZHjx9f/3dF7fOdS17FXgmDruX5
      XLx40Yj35xCbp0LEwsytCH7pF39+N/UpSNbi/W+88QY228a9vQyyw6avIpPNxezgXX768aes
      xDO3L0qht0nVdZ1PP/2UI0eOUFFRkW11DF5gUwOILU4Q0mSqXVYCsb3hpmSCtX691dXVBW3o
      +cqmBlBc2YxTinN3aBavM7M+a6HOA9aS3IzFrtxl0ydbiSyTwIpVihOJZ+4BLdSHPxKJ0N3d
      zZkzZ4w3fw6z6SRYTYQo87bSXF1MkcW4gdthbbHr+PHjRnFLjrPpCGB11RCa6cfvX0At0Ld0
      JhBC0N3dTU1NDTU1ebQ30h5lUwOIBkaJm4qoKJbxRwwDSJbp6WmCwaDRtytP2NQAXN52XES5
      N7JAvTtzk+BCCoOGw2Hu3r1r9O3KIza8S3p8mWFfmLraSkxCRdGNEWAr1ppXnDx50vD784gN
      J8GJlXkWwjLepi6qnaPMhgQtpZlTohAiQffv38fr9RrFLXnGhgZg9zQQufmXXF2JI9vL+IWj
      TweKZ+sB5Ngi8yGVzvZm+nt7UqoHKISHf61f71e+8pWCcef2ChtujvsqEok46Cp9Q6PIwkyN
      x4ZvZglPWyfB8WF0BJ1tdQyMh+hqq0PTtFc2c1MUBSEEVmt69+Vc6w+QiUZyz2YURiIRPv30
      U86fP7/jPJ98y9os2GzQRHiRH//ohyzrdmQlzs/+rV+n4sm+QE/rAdoY7p/EYragKhpWS+r1
      AJnK/c50PYAQgsuXL3P8+HHMZvOOv0O+5e0XbD2AtbiM979ynBs+B+XLfUS0p4PE03qAFezm
      BMPTUfYf7qQ3xXqATDbIyIRcWH2LmEwm7ty5Q11dXdo2sc23N3UhjACbukBC6Ny6/AnLOHn7
      7OuYTan5tnnTH2AbqKqKz+djYGCA9957L61y8+lBLQQD2LxN6uRD+v0JtOgSEWNjrOcIh8Pc
      u3ePs2fPZlsVgx2yqYlJtiKW5qYxJYpRM9gmNd+iQJqmce3atfXNrAzym037BD8anKasxJF3
      D2gmEUJw7949vF6vsYltgbBxn2DZhMnm5vzFQ7iKi7HZjdg2rG5mtbS0xLlz57KtikGa2HAE
      MFuLKHfZuXrpr/nD732XmZAxCoRCIe7fv8/p06eNPJ8CYlMX6Ic/+hG6s5pf/fXfpLo4cyNA
      Pqycqqq6vomtkedTWGxoAFZnBd/5znewRmf58I/+K7PhzI4AuWwEa03r6urqDL+/ANlwDqDG
      Qzzs6WP/ybc5/zO/jN22d4f8yclJlpeXOXHiRLZVMcgAGxqApcjNu2lc4HkVuRxlWllZ4d69
      e7z//vuG31+gGHd1E56N96c7Uc8gdzAMYAOEENy5c4f6+noqKyuzrY5BBknJAJaWlgBYDMwy
      PDpGQtXxz0wTjiXQlDiTUz70HHZttmJ8fJxwOMz+/ftzeoJusHO2bQDhpQA3ux8AMD45RWlJ
      KfH5SeZjMNg/wEBfHxYpztBEICl5ufaArays8ODBA2M/nz3CttPtiksqqKlYrY+sqihnfKgP
      WSqi6fAB/NFl4pip9tYQ7JtB08rX8/03Yy03O90N4tYKYraDpml8/vnnnDx5EpPJtKlOmcqB
      N+RmXvaLcrdtAMGAj7GxMYrdZagrYRKaTmNDGb1372JzuCizqty5fZ/Kxq71aqxs9QfYTjr0
      mt+/b9++pPbzyVQasCE387KTqgdIF1vVAyQSCYCMlERuxwBGR0cZGxtLqq433/Lr801uJmUn
      XQ+wl1hZWeHhw4e88cYbht+/x9jzBqCqKpcvX+bs2bNGfv8eZE8bwJrf39zcTFlZWbbVMcgC
      WTeANZdD01Ri0eiupkZMTEwQjUbp7Ow0XJ89StYNAFaNIDg/z9DjR7t2zrV4v5Hfv7fJmVbu
      5ZVVlHl2p4eWqqrreT5G07q9TdYNYM3lkSQJKQO7uG10vrt379LY2Gjk+Rjkhgu0m4yPj6/7
      /QYGe8oAlpeXefToEadPnzYmvQbAHjKAZ5tVG/n9BmtkfQ6wG29iIQQ3b96ktbUVj8eT8fMZ
      5A97YgQYHR1FURTa29uzrYpBjrHtESC8FODKnV7ef/dNeu7dIZwQtLc20Tc4jt3ppsyqEgiG
      qG7uoq7ClZTMTC5+rays0NPTw4ULFwy/3+AlUqoHqK0qA+LIVg/762087huj6+Qx/IMDhBSZ
      4ydeo69vBq3MsWU9gKqq61uopxMhBIlEgs8//5xTp069Mr9/u+Rbfn2+yc2k7B3XAwhdR9d1
      NN1EPL5CMBjD43Hhn1skklAxyxrBhQWwFSVVD5DJ/gC3bt2ivb09I/v55Ft+fb7JzaTsLTvE
      vIrlRT9mk5lJ3wLtLXUEQir7aquYHh+hqr2dYrPO6NQcbc3paRqRKmNjY4bfb7AlBVkQs7y8
      zBdffMF7772Xka0M863AJN/kZlJ2Uj3CdpN0T0xVVeXq1aucOXMm7V1nDAqPnAuD6mJn3Thu
      3bpFS0uLkd9vkBQ5YQBrXlhMifLdz/4j4XgoJTnDw8Ooqmr4/QZJk3UDeHYKYjXb+FrXz2K3
      bN9vX1pa4vHjx7z++utGvN8gabJuAM8iSzL7aw5hkreXFr2W53P69Gms8wH45GPwTWdIS4NC
      IqcMIBWEENy4cYP29nbKy8vh4QMYGYYH97OtmkEekPUo0E4ZHh5G0zTa2tpWP+joBEWBzq7s
      KmaQF2TdAHbirweDQXp7e/nqV7/6VE5T8+qPEJDBpXqDwiAvXCAhBOGY8tyEOZFIcPXqVc6d
      O2fE+w1SJicMYKvF6Bu9U/z2d/8fvWOB9d+/ffs27e3tORXvF7qG0NO7ya9BZsm6C5RMJobb
      YcPrceKwr77p1/z+1tbWTKuXNPriKPEv/hNCU7Cd+x1MVfuzrZJBEuzIAAZ7HxDVzav1AL2P
      cXlqKbOpjEwHaOs8gNuRRH6PEAQmR/G2dGw6H9jfVMG/+o13kGWJYDDI48ePuXjxYk7s5yME
      qLrOys3/hXnoMyR04kgUffMPkbYZzjXYfXZkAEvLSxSVVLMwNUld12HmRwaYDsGxw208HpzB
      2V6/5R79uhC4K2uS2ss/kVC4fPkyZ86cwWQybZkzrut6RvLKn5UbTuh8PrLMcsmvsq/ZycHR
      D8FkXf0+20wz3A1980FuJmW/KHcHBiA4evIsi74RJqaD1NUIxJM7LnQBkrS618+Tn82QJAmL
      zZ5UNOjWrVt0dHQk7fdvde5UeVbuxFKc+YgKJgcjtd+gyxWh+MSvpfT23w1980FuJmW/KHcH
      BqAzOtBHSBEcPHaI/p5HuCrrKLOq3Hs0QnvXgecMYLMvs+bGbOXODA0NAdDR0ZGUdkIIJEnK
      iJuk6/q63DKHBbMsoeqCUncJrlP/HJOc2o17Vm46yTe5mZT9otys1wMoigLwylDm4uIiV69e
      5f3330865LlZgwxd15n1+Sj3eLCluB36sznlQghmVhSCUZWGMhvFls2/63bkppN8k5tJ2TlX
      D7CV/a3l9589ezYt8f6P/vIv+PzSx9TWN/Bbv/07O5YpSRJetxWv29hrKB/JfhjlFQghuH79
      Op2dnWmL9wf8fgCCiwsbF8kLgYjG0QPLCMWI6Rc6WR8BNkMIQX9/PwH/HOfOnUub3A++8U08
      FRW0dnRs2BFGKCrqvVGIJZAq3JgONCKl6NMb5D45OwIEg0E+vXSJ6599ysqTxtzpoLyigq9/
      45t0dG3SBFvRILE6LxGR+Gqg36BgyfoIIEkvP2OKonDt2jV++dvfJhaJ4Cop2T2FimzIzdWI
      hRByvQeMt39Bk3UDkCN+sJcCq5PIhBbnLz/7c1y1xav5/eXlu6qPJEuYGiuh0egdsBfIuguk
      F1WgyxaEpiGEoPv+DfqWHlJR70FT49z/9PdZnLmbbTUNCpSsjwACicX5BUzj48gNDQR+co1/
      8g9/D0uRA02NAxBVVEqfLGwZGKSTrI8Ay3M+HBYTzsOHufz5FU7/2new2FeL4k1mG/Wv/ws+
      HFhkcH4+y5oaFCJZNwCXw45dlrh9+za1ihVrRFudGT/BbbfxVnMrtsgQgakbu9pG1aDwyboB
      mCNhHl+/DQmVE7/2c9gqA2iR0afHZZm3mhqYvPM9eq78OzQ1Sr//MX/V82MSaiJ7ihsUBGk3
      gEQ0RF//EKqW3Jt6XLXycH4Wrxwm4B8FUzHIzy9QybKFA2f+GYfe/H1M5iI+H7zEj+7/HxYi
      W7tF8WiYeDRijBwGG5L2ZLieB/dpaqxhYl6jq8X7ymS4RCLBD/7kf+BySHi8LWguFckUpdhd
      h1CqOdxajcX6ch/fpWiQQNjPPk8rsrSxDQshSMTjXPrT7yFJEhd/4x9hMqendjjfksvyTW4m
      ZWc8GU42W3G43Ui+GTRNQ9d1YrEY8DQXWwiBrutcu3aNhn1eZI+dtrJWZJeLxMwj/LEQA1PQ
      XG7G7ixZT19d7yWAhZqiWqKR6EvHnkXTVKqa25EkiWg0hiQnXtLjRftP5piqqi+l6r5Kj2SP
      PXtztqvjq84hhMBkMm1Lt2TOryjKeg+IZP5uO9dI07Tn+kukquOLx1RVxWKxrB9L+wgwNdLP
      7MIytS37qSkr3nAEEEIwMDDAwsICx48fB9K7PfraOTZKh04H+fZGzTe5mZSd8RGgbl8Hdfte
      /TvBYJDBwUEuXrxo+OYGWWXXo0CJRIIrV67w5ptvGvv5GGSdXTUAIQRffvklBw8exO127+ap
      DQw2ZFcNYGBgAIvFQnNz8/pnRnqDQTbZNQNYWFhgeHiYkydPvvTQG0ZgkC12xQAUReHGjRuc
      O3fupbCZgUE22ZVdIWZmVtcE6urqXjqezK4QqbC21pAJg3s2Rm3IzcwLbbd0zrgBbMXa4kYm
      OsUbBpCfcjMp+0W5Wa8HyKT/n6lNmwy5mZWbSdkvys36CGBgkE2yNgJElgL0DeDYCZUAAAXf
      SURBVI9TXd+KpEVwWmWikpOqsuKUZS7PzzLsC3LkYCu9Dx+CzU2Vy4G7qpypiVmamxtIZbxJ
      hJd4PDSG1VFCmV1n2r9E2/4OQosxhLJMmbeRIsv231h6PMSDvmFMVge15XZGJ+do7ugivhLG
      LCLYyutw21O7RbGVeR6N+OlsKKN/ZJq65jb0eBiHSUMtqsDjejnJMAmNeXj3DrK9hKYGD/0D
      Y1R6GzEJhRKHmSXViteT2vrOysIsw5OzNO5rxz8xSAwbTTXlmB0u5nw+mvc1p3Tv5qbHmA0s
      INvLcRAmGIPOtjriCQvBhdns1QPM+AIcOHKMpYCP2ekJBsZmqShN/eEHsBaXYEYlEZzDXtmM
      U44TWFik+94DSiurUrqAAJYiF13tLSTiURZWYry2v5UZ3yRj/T0sxuWUHn4A2VpMVZkbRUkw
      N7/CsWOHmZ0cZWpkgOmgkvLDj9AYHpvBKmtMzixw7NhhFuammZkYYWhmmXJninlXWoKVqIJk
      MjHrm6Pr0BFWFucIzEzROzxFVZkrNbnAwOAgJnn1ZSMVl1NdpDG7uMKDu90Ul1WmfO+qapvw
      ekrxVHiIC5mWchPTiyEedd/F7CzLngFIrG5TrQuwOYqRhYqq78wbW9voSpJlNFVD03Rk2UyJ
      q4hYLJ6yXCW2wuOhSfZ3dSCEjqapgEyxqwQlHk05n0kInZIyD0oihhA6+hO5DqcLTYmnLDe0
      MMNyNMb46ARRRUHTNYQAu8MJeoIkSzVe1leycur113FoQZbiYl2u1e7AIuko2tZb3G+G2VpE
      5/4DzEyPoWkaqrq6iW2J20k0GktZrhA6s8EoVaUOdF2gqDomWaakxE0sGs3eHCARWaZvcITa
      pg6EGqHEYWUholPtSX0PoOnxISZ8AZrbuggFphD2EiqK7Tg9ZcxOz1BbW0sqc+4l/yRDUwu4
      S8vxFMtMzCzSsb+NcDCOiShmpwdnCm/rRGSJvqFxbMUl1JYXMTTmo7Vr1QWymzUSZhdlzlRc
      FQDB7MwcpS4rjwcnaGztQI+FcRWZWEpYqEzB1dQ1hcH+PlS5iPbmah73DVPTsA9ZS1DishNY
      TlBTmdoWluGleYbGpmjY187y3Dgx7NRXliDbnSz6Z6mprUtpiyYtEWYhpFNZ7mR6bJjFGLQ1
      VRNXzESW541JsMHeJus1wQYG2cQwAIM9jWEABnuarK8EFyrhwAS+hJOi8AT2usN4HE+PTQ/1
      YK3uoML58uWfGRugf3yGhpZO9tVVJX2+eHiJmGQnODmAo6adSvfmk2ddVbh19RNmQxJN3gq8
      bfvpv32dk+dO0vtwFIujiIOdudOCNpMYBpAhogvT9MwWU7ZwB7Eo0djcxOxILyY1Su/De3S+
      oXJjahqvt5qFhQDVjV281lHLp9fu8o2f+wAdmdvXv2A+LKivsDEfVrDYy7HE51mMCKo9Rcwl
      LFSbE4z6w3jlALcXS3i7qwQt6Kf7Ri8uTy2J4BSSrtF45E2aKlfj9LLZQldLHYExnariKI/6
      hxntvY/LaWImWszEnS8ZGRnlg6+dL3gXodC/XxYRzM/5mA0Eqaiu5O7nf8VSWGNoNsLBtiZi
      ywHkkiaC00McO/Mevd3XAR2BxIp/kP/7459w9cvbiFiEiZlZmjoPMPLgJlduPUCoESZGx2io
      q2PK52Pk8WPc1V4OHDpEdCnA/ZvXqdn/Br7BHib9i7TWuRj3LREJ+rnzoO+57q1VDS34uj+h
      +ehbXP+ylwPtXiprm1GXAyjZunS7iDECZAib08OJY604Vxw4PNVEFhZ4+2d+kZ5rl5gLQ2Nr
      FZWOKqr22bhz7RKdR14HLBztbKB3dJ79B/cT89uQi8pxOiQcViuNbZ3URYOYXeUUlXvwlDgZ
      k2UamhqpbGhh4OYg1XU1HGmqZqDnOtUtXRBfxu7yUKEV4Sj1cLx0ddt3S5GbGo9ALvJQVOTm
      +PFOfBMjVLsc1NZUQoltT7wdjXWAXSAeWuT+wDQnjx5MaSHOIHMYBmCwp/n/6BEqBQVd5pwA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 9' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
